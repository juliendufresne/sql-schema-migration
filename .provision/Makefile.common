# do more actions on some target when the DEBUG is set to true
DEBUG := false
# By default, we'll try to use commands on the files that has changed
FAST := true
ifeq ($(DEBUG), true)
FAST := false
endif
# list of PHP files that changed compared to master
GIT_PHP_FILES_CHANGED := $(shell git diff --name-status $(shell git merge-base HEAD origin/master) | grep .php$ | grep -v '^D' | awk '{ print $$2; }')
GIT_PHP_SRC_FILES_CHANGED := $(shell git diff --name-status $(shell git merge-base HEAD origin/master) | grep .php$ | grep -v '^D' | grep "\ssrc/" | awk '{ print $$2; }')
GIT_PHP_TESTS_FILES_CHANGED := $(shell git diff --name-status $(shell git merge-base HEAD origin/master) | grep .php$ | grep -v '^D' | grep "\stests/" | awk '{ print $$2; }')
###>PROVISION_VARIABLES###
PROVISION_CLEAN :=
PROVISION_INSTALL :=
PARALLEL_LINT_BIN :=
PHP_CS_FIXER_BIN :=
PHPSTAN_BIN :=
PHPUNIT_BIN :=
###<PROVISION_VARIABLES###

help:
	@echo "\033[33m Usage:\033[39m"
	@echo "  make COMMAND"
	@echo ""
	@echo "\033[33m Options:\033[39m"
	@echo "   Options can be passed to the make command like this:"
	@echo "       make DEBUG=true install"
	@echo ""
	@echo "\033[32m   DEBUG=true             \033[39m   In case the command you are running did not fix your issue, this option will do more actions"
	@echo "\033[32m   FAST=false             \033[39m   Do not run in fast mode. The fast mode will only run commands on files that changed"
	@echo ""
	@echo "\033[33m Install commands:\033[39m"
	@echo "\033[32m   clean                  \033[39m   Clean everything generated by the install command"
	@echo "\033[32m   distclean              \033[39m   make clean + remove files produced by the configure script"
	@echo "\033[32m   install                \033[39m   install everything needed to run this application"
###>PROVISION_HELP###
###<PROVISION_HELP###
	@echo ""
	@echo "\033[33m Meta commands:\033[39m"
	@echo "\033[32m   push                   \033[39m   run all checks and tests"
	@echo ""
	@echo "\033[33m Checks commands:\033[39m"
	@echo "\033[32m   php-cs-fixer           \033[39m   fix code style in php files"
	@echo "\033[32m   phpstan                \033[39m   find bugs in the code"
	@echo ""
	@echo "\033[33m Tests commands:\033[39m"
	@echo "\033[32m   phpunit                \033[39m   run phpunit tests"
	@echo "\033[32m   phpunit-coverage       \033[39m   run phpunit tests with code coverage"

###< meta ###
.PHONY: push

push: composer-validate lint php-cs-fixer--dry-run phpstan phpunit
# $(make push) should print a warning message if the thing we are about to push is not the same thing the command has tested.
ifeq ($(shell git status --porcelain),)
	@echo ""
	@echo "  \033[97;44m                                                        \033[39;49m"
	@echo "  \033[97;44m    [OK] No errors found. You may push your changes.    \033[39;49m"
	@echo "  \033[97;44m                                                        \033[39;49m"
	@echo ""
else
	@echo ""
	@echo "  \033[97;44m                                                                              \033[39;49m"
	@echo "  \033[97;44m    [OK] No errors found.                                                     \033[39;49m"
	@echo "  \033[97;44m                                                                              \033[39;49m"
	@echo ""
	@echo ""
	@echo "  \033[97;43m                                                                              \033[39;49m"
	@echo "  \033[97;43m    Your git working tree is not empty.                                       \033[39;49m"
	@echo "  \033[97;43m    This means the 'make push' command possibly runs on files that are not    \033[39;49m"
	@echo "  \033[97;43m    going to be part of your next 'git push' command.                         \033[39;49m"
	@echo "  \033[97;43m    Please consider commit/squash your changes and run this command again.    \033[39;49m"
	@echo "  \033[97;43m                                                                              \033[39;49m"
	@echo ""
endif
###> meta ###

###> checks ###
.PHONY: composer-* lint lint-* php-cs-fixer phpstan

composer-outdated:
	@./bin/composer outdated

composer-validate:
	@./bin/composer validate

lint:
	@echo ""
	@echo " // Running \033[32mparallel-lint\033[39m"
	@echo ""
	@$(MAKE) -s lint-php
	@echo ""
	@echo " // Running \033[32mlint:twig\033[39m on \033[32mtemplates\033[39m folder"
	@echo ""
	@$(MAKE) -s lint-twig
	@echo ""
	@echo " // Running \033[32mlint:yaml\033[39m on \033[32mconfig\033[39m folder"
	@echo ""
	@$(MAKE) -s lint-yaml

lint-php:
ifeq ($(FAST), false)
	@./bin/php $(PARALLEL_LINT_BIN) src tests
else ifneq ($(GIT_PHP_FILES_CHANGED),)
	@./bin/php $(PARALLEL_LINT_BIN) $(GIT_PHP_FILES_CHANGED)
else
	@echo "You have made no change in PHP files compared to master"
endif

lint-twig:
	@./bin/php bin/console lint:twig templates

lint-yaml:
	@./bin/php bin/console lint:yaml config

php-cs-fixer:
ifeq ($(FAST), false)
	@./bin/php $(PHP_CS_FIXER_BIN) fix -vvv
else ifneq ($(GIT_PHP_FILES_CHANGED),)
	@./bin/php $(PHP_CS_FIXER_BIN) fix -vvv --config=.php_cs.dist --path-mode=intersection $(GIT_PHP_FILES_CHANGED)
else
	@echo "You have made no change in PHP files compared to master"
endif

php-cs-fixer--dry-run:
ifeq ($(FAST), false)
	@./bin/php $(PHP_CS_FIXER_BIN) fix -vvv --dry-run
else ifneq ($(GIT_PHP_FILES_CHANGED),)
	@./bin/php $(PHP_CS_FIXER_BIN) fix -vvv --dry-run --config=.php_cs.dist --path-mode=intersection $(GIT_PHP_FILES_CHANGED)
else
	@echo "You have made no change in PHP files compared to master"
endif

phpstan:
ifeq ($(FAST), false)
	@echo ""
	@echo " // Running phpstan on \033[32msrc\033[39m folder with level \033[32m7\033[39m"
	@echo ""
	@./bin/php $(PHPSTAN_BIN) analyse --no-progress --autoload-file=vendor/autoload.php --level=7 src
	@echo ""
	@echo " // Running phpstan on \033[32mtests\033[39m folder with level \033[32m5\033[39m"
	@echo ""
	@./bin/php $(PHPSTAN_BIN) analyse --no-progress --autoload-file=vendor/autoload.php --level=5 tests
else ifneq ($(GIT_PHP_FILES_CHANGED),)
ifneq ($(GIT_PHP_SRC_FILES_CHANGED),)
	@echo ""
	@echo " // Running phpstan on \033[32msrc\033[39m folder with level \033[32m7\033[39m"
	@echo ""
	@./bin/php $(PHPSTAN_BIN) analyse --no-progress --autoload-file=vendor/autoload.php --level=7 $(GIT_PHP_SRC_FILES_CHANGED)
endif
ifneq ($(GIT_PHP_TESTS_FILES_CHANGED),)
	@echo ""
	@echo " // Running phpstan on \033[32mtests\033[39m folder with level \033[32m5\033[39m"
	@echo ""
	@./bin/php $(PHPSTAN_BIN) analyse --no-progress --autoload-file=vendor/autoload.php --level=5 $(GIT_PHP_TESTS_FILES_CHANGED)
endif
else
	@echo "You have made no change in PHP files compared to master"
endif
###< checks ###

###> tests ###
.PHONY: phpunit phpunit-*

phpunit:
	@./bin/php $(PHPUNIT_BIN)

phpunit-coverage:
	@./bin/php -dzend_extension=xdebug.so $(PHPUNIT_BIN) --coverage-html reports/coverage --coverage-clover reports/clover.xml
###< tests ###

###> symfony/framework-bundle ###
cache-clear:
	@./bin/php bin/console cache:clear --no-warmup
.PHONY: cache-clear

cache-warmup: cache-clear
	@./bin/php bin/console cache:warmup
.PHONY: cache-warmup
###< symfony/framework-bundle ###

###> installation ###
.PHONY: clean distclean install

clean: $(PROVISION_CLEAN)

composer-install:
	@./bin/composer install --no-scripts --no-progress --prefer-dist --no-suggest

distclean: clean
	@rm -f Makefile || true
	@rm -rf reports var vendor || true

install:
ifeq ($(DEBUG), true)
	@$(MAKE) -s clean
endif
	@$(MAKE) -s $(PROVISION_INSTALL)
	@$(MAKE) -s composer-install
###< installation ###

###>PROVISION_TARGETS###
###<PROVISION_TARGETS###
